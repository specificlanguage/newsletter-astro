---
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../../consts';
import { getCollection, } from 'astro:content';
import FormattedDate from "../../components/FormattedDate.astro";
import {readingTime, stripHTML} from "../../frontPageHelpers";

export const prerender = false;

const { page } = Astro.params;
let pageNum: number;

try {
    pageNum = parseInt(page);
} catch {
    Astro.redirect("/404");
}

console.log(pageNum);

const newsletterPages = (await getCollection("newsletter"));
newsletterPages.sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());

const maxPages = Math.ceil(newsletterPages.length / 5);
console.log(newsletterPages, maxPages);

const pages = newsletterPages.slice(pageNum*5-5, pageNum*5);

if(maxPages < pageNum) {
    return Astro.redirect("/"); // Trust me this is weird but ok...
}

console.log(pages);

---

<!DOCTYPE html>
<html lang="en">
    <head>
        <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
    </head>
    <body>
    <Header title={SITE_TITLE} />
    <main>
        <h1>Page {pageNum.toString()}</h1>
        {pages.map((entry) => (
            <div class="mb-10">
                <a href={"newsletter/" + entry.slug}><img src={"/" + entry.data.image}/></a>
                <a href={"newsletter/" + entry.slug}><h2 class="-mb-2 font-serif">{entry.data.title}</h2></a>
                <p class="-mb-1 dark:text-neutral-400 text-neutral-700">{stripHTML(entry.body).slice(0, 450)}...</p>
                <div class="flow-root space-x-5 text-neutral-800 dark:text-neutral-200 ">
                    <p class="text-sm font-sans-serif float-left">
                        <i class="fa-regular fa-clock"/> {readingTime(stripHTML(entry.body))}
                    </p>
                    <p class="text-sm font-sans-serif float-left">
                        <i class="fa-regular fa-calendar"/> <FormattedDate date={entry.data.date}/>
                    </p>
                </div>
            </div>
        ))}
        {(page == 2) && <a href="/">Previous</a>}
        {(pageNum - 1 <= maxPages && pageNum > 2) &&
                <a class="p-3 border-1 border-neutral-200  hover:bg-neutral-500 hover:text-white" href={"page/" + (pageNum - 1).toString()}>Next</a>
        }
        {pageNum + 1 <= maxPages &&
                <a class="p-3 border-1 border-neutral-200  hover:bg-neutral-500 hover:text-white" href={"page" + (pageNum + 1).toString()}>Next</a>
        }
    </main>
    <Footer />
    </body>
</html>